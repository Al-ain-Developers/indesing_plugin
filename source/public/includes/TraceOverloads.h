//========================================================================================
//  
//  $File: //depot/devtech/16.0.x/plugin/source/public/includes/TraceOverloads.h $
//  
//  Owner: Florin trofin
//  
//  $Author: pmbuilder $
//  
//  $DateTime: 2020/11/06 13:08:29 $
//  
//  $Revision: #2 $
//  
//  $Change: 1088580 $
//  
//  Copyright 1997-2010 Adobe Systems Incorporated. All rights reserved.
//  
//  NOTICE:  Adobe permits you to use, modify, and distribute this file in accordance 
//  with the terms of the Adobe license agreement accompanying it.  If you have received
//  this file from a source other than Adobe, then your use, modification, or 
//  distribution of it requires the prior written permission of Adobe.
//  
//  
//  This file is the result of preprocessing the file generated by TraceGenerator.h.
//  It is not intended to be modified directly by hand.
//  
//========================================================================================

#pragma once
#ifndef __TRACEOVERLOADS_H__
#define __TRACEOVERLOADS_H__

#ifndef __TRACE_H__
#error Do not include TraceOverloads.h directly. Use Trace.h
#endif

inline void TRACE_INTERNAL(bool16 checkCategory, const char* category, const char* filename, const int32 lineNo, const char* format  )
{
    Trace::TraceImpl( checkCategory, category, filename, lineNo, format );
}

template< typename T0>
inline void TRACE_INTERNAL( bool16 checkCategory, const char* category, const char* filename, const int32 lineNo, const char* format ,  T0 p0)
{
    Trace::TraceImpl( checkCategory, category, filename, lineNo, format ,  Trace::format_arg(p0));
#if defined (ENABLE_TRACES)
    Trace::AllTraceImpl(category, filename, lineNo, format ,  Trace::format_arg(p0));
#endif
}
template< typename T0 , typename T1>
inline void TRACE_INTERNAL( bool16 checkCategory, const char* category, const char* filename, const int32 lineNo, const char* format ,  T0 p0 , T1 p1)
{
    Trace::TraceImpl( checkCategory, category, filename, lineNo, format ,  Trace::format_arg(p0) , Trace::format_arg(p1));
#if defined (ENABLE_TRACES)
    Trace::AllTraceImpl(category, filename, lineNo, format ,  Trace::format_arg(p0) , Trace::format_arg(p1));
#endif
}
template< typename T0 , typename T1 , typename T2>
inline void TRACE_INTERNAL( bool16 checkCategory, const char* category, const char* filename, const int32 lineNo, const char* format ,  T0 p0 , T1 p1 , T2 p2)
{
    Trace::TraceImpl( checkCategory, category, filename, lineNo, format ,  Trace::format_arg(p0) , Trace::format_arg(p1) , Trace::format_arg(p2));
#if defined (ENABLE_TRACES)
    Trace::AllTraceImpl(category, filename, lineNo, format ,  Trace::format_arg(p0) , Trace::format_arg(p1) , Trace::format_arg(p2));
#endif
}
template< typename T0 , typename T1 , typename T2 , typename T3>
inline void TRACE_INTERNAL( bool16 checkCategory, const char* category, const char* filename, const int32 lineNo, const char* format ,  T0 p0 , T1 p1 , T2 p2 , T3 p3)
{
    Trace::TraceImpl( checkCategory, category, filename, lineNo, format ,  Trace::format_arg(p0) , Trace::format_arg(p1) , Trace::format_arg(p2) , Trace::format_arg(p3));
#if defined (ENABLE_TRACES)
    Trace::AllTraceImpl(category, filename, lineNo, format ,  Trace::format_arg(p0) , Trace::format_arg(p1) , Trace::format_arg(p2) , Trace::format_arg(p3));
#endif
}
template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4>
inline void TRACE_INTERNAL( bool16 checkCategory, const char* category, const char* filename, const int32 lineNo, const char* format ,  T0 p0 , T1 p1 , T2 p2 , T3 p3 , T4 p4)
{
    Trace::TraceImpl( checkCategory, category, filename, lineNo, format ,  Trace::format_arg(p0) , Trace::format_arg(p1) , Trace::format_arg(p2) , Trace::format_arg(p3) , Trace::format_arg(p4));
#if defined (ENABLE_TRACES)
    Trace::AllTraceImpl(category, filename, lineNo, format ,  Trace::format_arg(p0) , Trace::format_arg(p1) , Trace::format_arg(p2) , Trace::format_arg(p3) , Trace::format_arg(p4));
#endif
}
template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5>
inline void TRACE_INTERNAL( bool16 checkCategory, const char* category, const char* filename, const int32 lineNo, const char* format ,  T0 p0 , T1 p1 , T2 p2 , T3 p3 , T4 p4 , T5 p5)
{
    Trace::TraceImpl( checkCategory, category, filename, lineNo, format ,  Trace::format_arg(p0) , Trace::format_arg(p1) , Trace::format_arg(p2) , Trace::format_arg(p3) , Trace::format_arg(p4) , Trace::format_arg(p5));
#if defined (ENABLE_TRACES)
    Trace::AllTraceImpl(category, filename, lineNo, format ,  Trace::format_arg(p0) , Trace::format_arg(p1) , Trace::format_arg(p2) , Trace::format_arg(p3) , Trace::format_arg(p4) , Trace::format_arg(p5));
#endif
}
template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6>
inline void TRACE_INTERNAL( bool16 checkCategory, const char* category, const char* filename, const int32 lineNo, const char* format ,  T0 p0 , T1 p1 , T2 p2 , T3 p3 , T4 p4 , T5 p5 , T6 p6)
{
    Trace::TraceImpl( checkCategory, category, filename, lineNo, format ,  Trace::format_arg(p0) , Trace::format_arg(p1) , Trace::format_arg(p2) , Trace::format_arg(p3) , Trace::format_arg(p4) , Trace::format_arg(p5) , Trace::format_arg(p6));
#if defined (ENABLE_TRACES)
    Trace::AllTraceImpl(category, filename, lineNo, format ,  Trace::format_arg(p0) , Trace::format_arg(p1) , Trace::format_arg(p2) , Trace::format_arg(p3) , Trace::format_arg(p4) , Trace::format_arg(p5) , Trace::format_arg(p6));
#endif
}
template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7>
inline void TRACE_INTERNAL( bool16 checkCategory, const char* category, const char* filename, const int32 lineNo, const char* format ,  T0 p0 , T1 p1 , T2 p2 , T3 p3 , T4 p4 , T5 p5 , T6 p6 , T7 p7)
{
    Trace::TraceImpl( checkCategory, category, filename, lineNo, format ,  Trace::format_arg(p0) , Trace::format_arg(p1) , Trace::format_arg(p2) , Trace::format_arg(p3) , Trace::format_arg(p4) , Trace::format_arg(p5) , Trace::format_arg(p6) , Trace::format_arg(p7));
#if defined (ENABLE_TRACES)
    Trace::AllTraceImpl(category, filename, lineNo, format ,  Trace::format_arg(p0) , Trace::format_arg(p1) , Trace::format_arg(p2) , Trace::format_arg(p3) , Trace::format_arg(p4) , Trace::format_arg(p5) , Trace::format_arg(p6) , Trace::format_arg(p7));
#endif
}
template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8>
inline void TRACE_INTERNAL( bool16 checkCategory, const char* category, const char* filename, const int32 lineNo, const char* format ,  T0 p0 , T1 p1 , T2 p2 , T3 p3 , T4 p4 , T5 p5 , T6 p6 , T7 p7 , T8 p8)
{
    Trace::TraceImpl( checkCategory, category, filename, lineNo, format ,  Trace::format_arg(p0) , Trace::format_arg(p1) , Trace::format_arg(p2) , Trace::format_arg(p3) , Trace::format_arg(p4) , Trace::format_arg(p5) , Trace::format_arg(p6) , Trace::format_arg(p7) , Trace::format_arg(p8));
#if defined (ENABLE_TRACES)
    Trace::AllTraceImpl(category, filename, lineNo, format ,  Trace::format_arg(p0) , Trace::format_arg(p1) , Trace::format_arg(p2) , Trace::format_arg(p3) , Trace::format_arg(p4) , Trace::format_arg(p5) , Trace::format_arg(p6) , Trace::format_arg(p7) , Trace::format_arg(p8));
#endif
}
template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9>
inline void TRACE_INTERNAL( bool16 checkCategory, const char* category, const char* filename, const int32 lineNo, const char* format ,  T0 p0 , T1 p1 , T2 p2 , T3 p3 , T4 p4 , T5 p5 , T6 p6 , T7 p7 , T8 p8 , T9 p9)
{
    Trace::TraceImpl( checkCategory, category, filename, lineNo, format ,  Trace::format_arg(p0) , Trace::format_arg(p1) , Trace::format_arg(p2) , Trace::format_arg(p3) , Trace::format_arg(p4) , Trace::format_arg(p5) , Trace::format_arg(p6) , Trace::format_arg(p7) , Trace::format_arg(p8) , Trace::format_arg(p9));
#if defined (ENABLE_TRACES)
    Trace::AllTraceImpl(category, filename, lineNo, format ,  Trace::format_arg(p0) , Trace::format_arg(p1) , Trace::format_arg(p2) , Trace::format_arg(p3) , Trace::format_arg(p4) , Trace::format_arg(p5) , Trace::format_arg(p6) , Trace::format_arg(p7) , Trace::format_arg(p8) , Trace::format_arg(p9));
#endif
}
template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10>
inline void TRACE_INTERNAL( bool16 checkCategory, const char* category, const char* filename, const int32 lineNo, const char* format ,  T0 p0 , T1 p1 , T2 p2 , T3 p3 , T4 p4 , T5 p5 , T6 p6 , T7 p7 , T8 p8 , T9 p9 , T10 p10)
{
    Trace::TraceImpl( checkCategory, category, filename, lineNo, format ,  Trace::format_arg(p0) , Trace::format_arg(p1) , Trace::format_arg(p2) , Trace::format_arg(p3) , Trace::format_arg(p4) , Trace::format_arg(p5) , Trace::format_arg(p6) , Trace::format_arg(p7) , Trace::format_arg(p8) , Trace::format_arg(p9) , Trace::format_arg(p10));
#if defined (ENABLE_TRACES)
    Trace::AllTraceImpl(category, filename, lineNo, format ,  Trace::format_arg(p0) , Trace::format_arg(p1) , Trace::format_arg(p2) , Trace::format_arg(p3) , Trace::format_arg(p4) , Trace::format_arg(p5) , Trace::format_arg(p6) , Trace::format_arg(p7) , Trace::format_arg(p8) , Trace::format_arg(p9) , Trace::format_arg(p10));
#endif
}
template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11>
inline void TRACE_INTERNAL( bool16 checkCategory, const char* category, const char* filename, const int32 lineNo, const char* format ,  T0 p0 , T1 p1 , T2 p2 , T3 p3 , T4 p4 , T5 p5 , T6 p6 , T7 p7 , T8 p8 , T9 p9 , T10 p10 , T11 p11)
{
    Trace::TraceImpl( checkCategory, category, filename, lineNo, format ,  Trace::format_arg(p0) , Trace::format_arg(p1) , Trace::format_arg(p2) , Trace::format_arg(p3) , Trace::format_arg(p4) , Trace::format_arg(p5) , Trace::format_arg(p6) , Trace::format_arg(p7) , Trace::format_arg(p8) , Trace::format_arg(p9) , Trace::format_arg(p10) , Trace::format_arg(p11));
#if defined (ENABLE_TRACES)
    Trace::AllTraceImpl(category, filename, lineNo, format ,  Trace::format_arg(p0) , Trace::format_arg(p1) , Trace::format_arg(p2) , Trace::format_arg(p3) , Trace::format_arg(p4) , Trace::format_arg(p5) , Trace::format_arg(p6) , Trace::format_arg(p7) , Trace::format_arg(p8) , Trace::format_arg(p9) , Trace::format_arg(p10) , Trace::format_arg(p11));
#endif
}
template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12>
inline void TRACE_INTERNAL( bool16 checkCategory, const char* category, const char* filename, const int32 lineNo, const char* format ,  T0 p0 , T1 p1 , T2 p2 , T3 p3 , T4 p4 , T5 p5 , T6 p6 , T7 p7 , T8 p8 , T9 p9 , T10 p10 , T11 p11 , T12 p12)
{
    Trace::TraceImpl( checkCategory, category, filename, lineNo, format ,  Trace::format_arg(p0) , Trace::format_arg(p1) , Trace::format_arg(p2) , Trace::format_arg(p3) , Trace::format_arg(p4) , Trace::format_arg(p5) , Trace::format_arg(p6) , Trace::format_arg(p7) , Trace::format_arg(p8) , Trace::format_arg(p9) , Trace::format_arg(p10) , Trace::format_arg(p11) , Trace::format_arg(p12));
#if defined (ENABLE_TRACES)
    Trace::AllTraceImpl(category, filename, lineNo, format ,  Trace::format_arg(p0) , Trace::format_arg(p1) , Trace::format_arg(p2) , Trace::format_arg(p3) , Trace::format_arg(p4) , Trace::format_arg(p5) , Trace::format_arg(p6) , Trace::format_arg(p7) , Trace::format_arg(p8) , Trace::format_arg(p9) , Trace::format_arg(p10) , Trace::format_arg(p11) , Trace::format_arg(p12));
#endif
}
template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13>
inline void TRACE_INTERNAL( bool16 checkCategory, const char* category, const char* filename, const int32 lineNo, const char* format ,  T0 p0 , T1 p1 , T2 p2 , T3 p3 , T4 p4 , T5 p5 , T6 p6 , T7 p7 , T8 p8 , T9 p9 , T10 p10 , T11 p11 , T12 p12 , T13 p13)
{
    Trace::TraceImpl( checkCategory, category, filename, lineNo, format ,  Trace::format_arg(p0) , Trace::format_arg(p1) , Trace::format_arg(p2) , Trace::format_arg(p3) , Trace::format_arg(p4) , Trace::format_arg(p5) , Trace::format_arg(p6) , Trace::format_arg(p7) , Trace::format_arg(p8) , Trace::format_arg(p9) , Trace::format_arg(p10) , Trace::format_arg(p11) , Trace::format_arg(p12) , Trace::format_arg(p13));
#if defined (ENABLE_TRACES)
    Trace::AllTraceImpl(category, filename, lineNo, format ,  Trace::format_arg(p0) , Trace::format_arg(p1) , Trace::format_arg(p2) , Trace::format_arg(p3) , Trace::format_arg(p4) , Trace::format_arg(p5) , Trace::format_arg(p6) , Trace::format_arg(p7) , Trace::format_arg(p8) , Trace::format_arg(p9) , Trace::format_arg(p10) , Trace::format_arg(p11) , Trace::format_arg(p12) , Trace::format_arg(p13));
#endif
}
template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14>
inline void TRACE_INTERNAL( bool16 checkCategory, const char* category, const char* filename, const int32 lineNo, const char* format ,  T0 p0 , T1 p1 , T2 p2 , T3 p3 , T4 p4 , T5 p5 , T6 p6 , T7 p7 , T8 p8 , T9 p9 , T10 p10 , T11 p11 , T12 p12 , T13 p13 , T14 p14)
{
    Trace::TraceImpl( checkCategory, category, filename, lineNo, format ,  Trace::format_arg(p0) , Trace::format_arg(p1) , Trace::format_arg(p2) , Trace::format_arg(p3) , Trace::format_arg(p4) , Trace::format_arg(p5) , Trace::format_arg(p6) , Trace::format_arg(p7) , Trace::format_arg(p8) , Trace::format_arg(p9) , Trace::format_arg(p10) , Trace::format_arg(p11) , Trace::format_arg(p12) , Trace::format_arg(p13) , Trace::format_arg(p14));
#if defined (ENABLE_TRACES)
    Trace::AllTraceImpl(category, filename, lineNo, format ,  Trace::format_arg(p0) , Trace::format_arg(p1) , Trace::format_arg(p2) , Trace::format_arg(p3) , Trace::format_arg(p4) , Trace::format_arg(p5) , Trace::format_arg(p6) , Trace::format_arg(p7) , Trace::format_arg(p8) , Trace::format_arg(p9) , Trace::format_arg(p10) , Trace::format_arg(p11) , Trace::format_arg(p12) , Trace::format_arg(p13) , Trace::format_arg(p14));
#endif
}
template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15>
inline void TRACE_INTERNAL( bool16 checkCategory, const char* category, const char* filename, const int32 lineNo, const char* format ,  T0 p0 , T1 p1 , T2 p2 , T3 p3 , T4 p4 , T5 p5 , T6 p6 , T7 p7 , T8 p8 , T9 p9 , T10 p10 , T11 p11 , T12 p12 , T13 p13 , T14 p14 , T15 p15)
{
    Trace::TraceImpl( checkCategory, category, filename, lineNo, format ,  Trace::format_arg(p0) , Trace::format_arg(p1) , Trace::format_arg(p2) , Trace::format_arg(p3) , Trace::format_arg(p4) , Trace::format_arg(p5) , Trace::format_arg(p6) , Trace::format_arg(p7) , Trace::format_arg(p8) , Trace::format_arg(p9) , Trace::format_arg(p10) , Trace::format_arg(p11) , Trace::format_arg(p12) , Trace::format_arg(p13) , Trace::format_arg(p14) , Trace::format_arg(p15));
#if defined (ENABLE_TRACES)
    Trace::AllTraceImpl(category, filename, lineNo, format ,  Trace::format_arg(p0) , Trace::format_arg(p1) , Trace::format_arg(p2) , Trace::format_arg(p3) , Trace::format_arg(p4) , Trace::format_arg(p5) , Trace::format_arg(p6) , Trace::format_arg(p7) , Trace::format_arg(p8) , Trace::format_arg(p9) , Trace::format_arg(p10) , Trace::format_arg(p11) , Trace::format_arg(p12) , Trace::format_arg(p13) , Trace::format_arg(p14) , Trace::format_arg(p15));
#endif
}
template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16>
inline void TRACE_INTERNAL( bool16 checkCategory, const char* category, const char* filename, const int32 lineNo, const char* format ,  T0 p0 , T1 p1 , T2 p2 , T3 p3 , T4 p4 , T5 p5 , T6 p6 , T7 p7 , T8 p8 , T9 p9 , T10 p10 , T11 p11 , T12 p12 , T13 p13 , T14 p14 , T15 p15 , T16 p16)
{
    Trace::TraceImpl( checkCategory, category, filename, lineNo, format ,  Trace::format_arg(p0) , Trace::format_arg(p1) , Trace::format_arg(p2) , Trace::format_arg(p3) , Trace::format_arg(p4) , Trace::format_arg(p5) , Trace::format_arg(p6) , Trace::format_arg(p7) , Trace::format_arg(p8) , Trace::format_arg(p9) , Trace::format_arg(p10) , Trace::format_arg(p11) , Trace::format_arg(p12) , Trace::format_arg(p13) , Trace::format_arg(p14) , Trace::format_arg(p15) , Trace::format_arg(p16));
#if defined (ENABLE_TRACES)
    Trace::AllTraceImpl(category, filename, lineNo, format ,  Trace::format_arg(p0) , Trace::format_arg(p1) , Trace::format_arg(p2) , Trace::format_arg(p3) , Trace::format_arg(p4) , Trace::format_arg(p5) , Trace::format_arg(p6) , Trace::format_arg(p7) , Trace::format_arg(p8) , Trace::format_arg(p9) , Trace::format_arg(p10) , Trace::format_arg(p11) , Trace::format_arg(p12) , Trace::format_arg(p13) , Trace::format_arg(p14) , Trace::format_arg(p15) , Trace::format_arg(p16));
#endif
}
template< typename T0 , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17>
inline void TRACE_INTERNAL( bool16 checkCategory, const char* category, const char* filename, const int32 lineNo, const char* format ,  T0 p0 , T1 p1 , T2 p2 , T3 p3 , T4 p4 , T5 p5 , T6 p6 , T7 p7 , T8 p8 , T9 p9 , T10 p10 , T11 p11 , T12 p12 , T13 p13 , T14 p14 , T15 p15 , T16 p16 , T17 p17)
{
    Trace::TraceImpl( checkCategory, category, filename, lineNo, format ,  Trace::format_arg(p0) , Trace::format_arg(p1) , Trace::format_arg(p2) , Trace::format_arg(p3) , Trace::format_arg(p4) , Trace::format_arg(p5) , Trace::format_arg(p6) , Trace::format_arg(p7) , Trace::format_arg(p8) , Trace::format_arg(p9) , Trace::format_arg(p10) , Trace::format_arg(p11) , Trace::format_arg(p12) , Trace::format_arg(p13) , Trace::format_arg(p14) , Trace::format_arg(p15) , Trace::format_arg(p16) , Trace::format_arg(p17));
#if defined (ENABLE_TRACES)
    Trace::AllTraceImpl(category, filename, lineNo, format ,  Trace::format_arg(p0) , Trace::format_arg(p1) , Trace::format_arg(p2) , Trace::format_arg(p3) , Trace::format_arg(p4) , Trace::format_arg(p5) , Trace::format_arg(p6) , Trace::format_arg(p7) , Trace::format_arg(p8) , Trace::format_arg(p9) , Trace::format_arg(p10) , Trace::format_arg(p11) , Trace::format_arg(p12) , Trace::format_arg(p13) , Trace::format_arg(p14) , Trace::format_arg(p15) , Trace::format_arg(p16) , Trace::format_arg(p17));
#endif
}

#endif // __TRACEOVERLOADS_H__
